package e2e

import (
	"fmt"
	"os/exec"
	"regexp"
	"testing"

	"github.com/c2fo/testify/require"
)

func TestE2E(t *testing.T) {
	cmd := exec.Command("bitrise", "run", "test")
	cmd.Dir = "./.."
	cmdLog, err := cmd.CombinedOutput()
	require.NoError(t, err, fmt.Sprintf("bitrise run test failed: %#v | output: %s", err, cmdLog))

	debugRegexp := regexp.MustCompile(`\[DEBUG\] debug level log`)
	infoRegexp := regexp.MustCompile(`info level log`)
	warningRegexp := regexp.MustCompile(`\[WARNING\] warning level log`)
	errorRegexp := regexp.MustCompile(`\[ERROR\] error level log`)
	outputSetRegexp := regexp.MustCompile(`This output was generated by the Action: Hello Bello`)

	require.True(t, debugRegexp.Match(cmdLog), fmt.Sprintf("Debug log is not present:\n%s", cmdLog))
	require.True(t, infoRegexp.Match(cmdLog), fmt.Sprintf("Info log is not present:\n%s", cmdLog))
	require.True(t, warningRegexp.Match(cmdLog), fmt.Sprintf("Warning log is not present:\n%s", cmdLog))
	require.True(t, errorRegexp.Match(cmdLog), fmt.Sprintf("Error log is not present:\n%s", cmdLog))
	require.True(t, outputSetRegexp.Match(cmdLog), fmt.Sprintf("Output was not set:\n%s", cmdLog))
}
